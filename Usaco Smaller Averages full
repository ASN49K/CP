#include <bits/stdc++.h>

using namespace std;
#define pb push_back
#define all(x) x.begin(),x.end()
using i64=long long;
const int N=500;
const int mod=1e9+7;
int n;
int dp[N+1][N+1];
int sa[N+1],sb[N+1];
bool compare(int i1,int i2,int j1,int j2)
{
    return 1LL*(sa[i2]-sa[i1])*(j2-j1)<=1LL*(sb[j2]-sb[j1])*(i2-i1);
}

int add(int x,int y)
{
    x+=y;
    if(x>=mod)
    {
        x-=mod;
    }
    if(x<0)
    {
        x+=mod;
    }
    return x;
}
int main()
{
    cin>>n;
    for(int i=1;i<=n;i++)
    {
        cin>>sa[i];
        sa[i]+=sa[i-1];
    }
    for(int i=1;i<=n;i++)
    {
        cin>>sb[i];
        sb[i]+=sb[i-1];
    }
    dp[0][0]=1;

    vector<pair<int,int>>ord_col;
    for(int i=1;i<=n;i++)
    {
        for(int j=0;j<i;j++)
        {
            ord_col.pb({j,i});
        }
    }
    sort(all(ord_col) ,[&](const pair<int,int>&a,const pair<int,int>&b){
        return 1LL*(sb[a.second]-sb[a.first])*(b.second-b.first)<1LL*(sb[b.second]-sb[b.first])*(a.second-a.first);
    });
    for(int i=1;i<=n;i++)
    {
        vector<int>ord(i,0);
        iota(all(ord) , 0);
        sort(all(ord) , [&](int l,int r){
            return 1LL*(sa[i]-sa[l])*(i-r)<1LL*(sa[i]-sa[r])*(i-l);
        });

        vector<vector<int>>sum(i+1,vector<int>(n+1,0));
        for(int j=1;j<=i;j++)
        {
            sum[j][0]=dp[ord[j-1]][0]+sum[j-1][0];
            for(int k=1;k<=n;k++)
            {
                sum[j][k]=add(dp[ord[j-1]][k] , sum[j-1][k]);
            }
        }
        int it=0;
        for(pair<int,int>& poz:ord_col)
        {
            while(it<i && compare(ord[it],i,poz.first,poz.second))
            {
                it++;
            }

            dp[i][poz.second] += sum[it][poz.first];
            dp[i][poz.second] %= mod;
        }
    }
    cout<<dp[n][n];
}
