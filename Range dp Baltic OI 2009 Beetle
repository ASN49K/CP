//imi setez de la inceput cate picaturi sa vizitez
//s-ar putea sa mearga cautare binara dar mie prea lene sa gandesc + n<=300
#include <bits/stdc++.h>
using namespace std;
#define all(x) x.begin(),x.end()
#define pb push_back
#define bug(x) cerr<<#x<<" ( "<<x<<endl
using i64=long long;
const int inf=1e9;
const i64 INF=1e18;
const int mod=1e9+7;
const int N=300;
int n,m;
int poz[N];
i64 dp[N][N][2];


i64 best_with_value(const int& x)
{
    for(int i=0;i<n;i++)
    {
        dp[i][i][0]=dp[i][i][1]=x*abs(poz[i]);
    }
    for(int l=n-1;l>=0;l--)
    {
        for(int r=l+1;r<n && r-l+1<=x;r++)
        {
            int ramas=x-r+l;
            dp[l][r][0]=min( dp[l+1][r][0]+1LL*(poz[l+1]-poz[l])*ramas , dp[l+1][r][1]+1LL*(poz[r]-poz[l])*ramas );
            dp[l][r][1]=min( dp[l][r-1][1]+1LL*(poz[r]-poz[r-1])*ramas , dp[l][r-1][0]+1LL*(poz[r]-poz[l])*ramas );
        }
    }
    i64 rez=INF;
    for(int i=0;i+x-1<n;i++)
    {
        rez=min(rez , dp[i][i+x-1][0]);
        rez=min(rez , dp[i][i+x-1][1]);
    }
    return rez;
}
main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
        cin>>poz[i];
    }
    sort(poz,poz+n);
    i64 rez=0;
    for(int i=1;i<=n;i++)
    {
        rez=max(rez,1LL*m*i-best_with_value(i));
    }
    cout<<rez;
}
